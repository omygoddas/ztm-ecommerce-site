{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyCJoNULE_BdNVM1VYuu8b_VAu-RfHNyvXY\",\n  authDomain: \"ztm-crown-ecommerce.firebaseapp.com\",\n  databaseURL: \"https://ztm-crown-ecommerce.firebaseio.com\",\n  projectId: \"ztm-crown-ecommerce\",\n  storageBucket: \"ztm-crown-ecommerce.appspot.com\",\n  messagingSenderId: \"842247472592\",\n  appId: \"1:842247472592:web:4352620c58001e677025d5\",\n  measurementId: \"G-S84D5QR394\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/13kfjdsofjm`);\n  console.log(userRef);\n  const snapShot = await userRef.get();\n  console.log(snapShot); //  we don't need to check if 'users' collection exist because if it doesn't it'll\n  //  also be created at the same time\n  // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     });\n  //   } catch (error) {\n  //     console.log('Error creating user to firebase!!', error.message);\n  //   }\n  // }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/chihchenglai/Documents/GitHub/ztm-ecommerce-site/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","console","log","snapShot","get","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,qCAFC;AAGbC,EAAAA,WAAW,EAAE,4CAHA;AAIbC,EAAAA,SAAS,EAAE,qBAJE;AAKbC,EAAAA,aAAa,EAAE,iCALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,mBAAf,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAMK,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAN2E,CAQ3E;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOL,OAAP;AACD,CA3BM;AA6BPb,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AAEA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetB,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: \"AIzaSyCJoNULE_BdNVM1VYuu8b_VAu-RfHNyvXY\",\n  authDomain: \"ztm-crown-ecommerce.firebaseapp.com\",\n  databaseURL: \"https://ztm-crown-ecommerce.firebaseio.com\",\n  projectId: \"ztm-crown-ecommerce\",\n  storageBucket: \"ztm-crown-ecommerce.appspot.com\",\n  messagingSenderId: \"842247472592\",\n  appId: \"1:842247472592:web:4352620c58001e677025d5\",\n  measurementId: \"G-S84D5QR394\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/13kfjdsofjm`);\n  console.log(userRef);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  //  we don't need to check if 'users' collection exist because if it doesn't it'll\n  //  also be created at the same time\n  // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     });\n  //   } catch (error) {\n  //     console.log('Error creating user to firebase!!', error.message);\n  //   }\n  // }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}