{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollections() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\n}","map":{"version":3,"sources":["/Users/chihchenglai/Documents/GitHub/ztm-ecommerce-site/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollections","collectionRef","collection","snapshot","get","collectionsMap","error","message","onFetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BK,+BAD+B,EAE/BK,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACC,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACE,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,uBAAV,GAAoC;AACzC,QAAMhB,UAAU,CAACO,eAAe,CAACU,uBAAjB,EAA0CT,gBAA1C,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop.actions';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollections() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\n}\n"]},"metadata":{},"sourceType":"module"}